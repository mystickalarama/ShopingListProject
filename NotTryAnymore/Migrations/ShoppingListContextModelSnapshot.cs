// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NotTryAnymore.Models;

#nullable disable

namespace NotTryAnymore.Migrations
{
    [DbContext(typeof(ShoppingListContext))]
    partial class ShoppingListContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NotTryAnymore.Models.CategoryModel", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CategoryID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("CategoryId");

                    b.HasIndex(new[] { "CategoryName" }, "CategoryName");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("NotTryAnymore.Models.ProductModel", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProductID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("CategoryID");

                    b.Property<string>("ProductImage")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("ProductId");

                    b.HasIndex(new[] { "CategoryId" }, "CategoriesProducts");

                    b.HasIndex(new[] { "CategoryId" }, "CategoryID");

                    b.HasIndex(new[] { "ProductName" }, "ProductName");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("NotTryAnymore.Models.ShopListDetailModel", b =>
                {
                    b.Property<int>("ShopListId")
                        .HasColumnType("int")
                        .HasColumnName("ShopListID");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("ProductID");

                    b.Property<string>("Brand")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Description")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("money");

                    b.Property<int?>("Quantity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("(0)");

                    b.HasKey("ShopListId", "ProductId")
                        .HasName("PK_ShopList_Details");

                    b.HasIndex(new[] { "ProductId" }, "ProductID");

                    b.HasIndex(new[] { "ProductId" }, "ProductsShopList_Details");

                    b.HasIndex(new[] { "ShopListId" }, "ShopListID");

                    b.HasIndex(new[] { "ShopListId" }, "ShopListShopList_Details");

                    b.ToTable("Shoping List Details", (string)null);
                });

            modelBuilder.Entity("NotTryAnymore.Models.ShopListModel", b =>
                {
                    b.Property<int>("ShopListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ShopListID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShopListId"));

                    b.Property<string>("ShopListName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("ShopListId");

                    b.HasIndex(new[] { "ShopListName" }, "ShopListName");

                    b.HasIndex(new[] { "UserId" }, "UserID");

                    b.HasIndex(new[] { "UserId" }, "UsersShopList");

                    b.ToTable("ShopLists");
                });

            modelBuilder.Entity("NotTryAnymore.Models.UserModel", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("UserSurname")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("VerificationToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("NotTryAnymore.Models.ProductModel", b =>
                {
                    b.HasOne("NotTryAnymore.Models.CategoryModel", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK_Products_Categories");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("NotTryAnymore.Models.ShopListDetailModel", b =>
                {
                    b.HasOne("NotTryAnymore.Models.ProductModel", "Product")
                        .WithMany("ShopListDetail")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK_ShopList_Details_Products");

                    b.HasOne("NotTryAnymore.Models.ShopListModel", "ShopList")
                        .WithMany("ShopListDetails")
                        .HasForeignKey("ShopListId")
                        .IsRequired()
                        .HasConstraintName("FK_ShopList_Details_ShopLists");

                    b.Navigation("Product");

                    b.Navigation("ShopList");
                });

            modelBuilder.Entity("NotTryAnymore.Models.ShopListModel", b =>
                {
                    b.HasOne("NotTryAnymore.Models.UserModel", "User")
                        .WithMany("ShopLists")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_ShopLists_Users");

                    b.Navigation("User");
                });

            modelBuilder.Entity("NotTryAnymore.Models.CategoryModel", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("NotTryAnymore.Models.ProductModel", b =>
                {
                    b.Navigation("ShopListDetail");
                });

            modelBuilder.Entity("NotTryAnymore.Models.ShopListModel", b =>
                {
                    b.Navigation("ShopListDetails");
                });

            modelBuilder.Entity("NotTryAnymore.Models.UserModel", b =>
                {
                    b.Navigation("ShopLists");
                });
#pragma warning restore 612, 618
        }
    }
}
